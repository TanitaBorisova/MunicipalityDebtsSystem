@model AddPlannedDrawViewModel; 

@section HeadContent {
  
    <link href="~/lib/data-tables/datatables.min.css" rel="stylesheet" />
}

@{
    ViewData["Title"] = "Планирани усвоявания";
    ViewData["NewPlannedDraw"] = "Ново планирано усвояване";
    var today = DateTime.Now.ToString("dd.MM.yyyy");
}

<script src="~/lib/data-tables/datatables.min.js"></script>

<div class="smart-title">
    <h2>@ViewData["Title"]</h2>
</div>

<hr />
<partial name="_DebtInfo" model="Model.DebtPartialInfo" />
<hr />

<div class="smart-title">
    <h4>@ViewData["NewPlannedDraw"]</h4>
</div>

<div class="row card-body">
    <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
        <form id="plannedDraws" asp-action="AddPlanned" asp-controller ="Draw" method="post" enctype="multipart/form-data">
            <input type="hidden" asp-for="@Model.DebtId" />
            <input type="hidden" asp-for="@Model.OperationTypeId" />
            <input type="hidden" asp-for="@Model.IsFinished" />
           
            <div class="row">
                @{
                    if (Model.IsFinished)
                    {
                        <div class="col-sm-6 mb-2">
                            <label asp-for="@Model.DrawDate" class="form-label-add-edit">Дата на планирано усвояване:</label>
                            <input asp-for="@Model.DrawDate" class="form-control" aria-required="true" value="@(string.IsNullOrEmpty(Model.DrawDate) ? today : Model.DrawDate)" readonly="readonly"/> 
                            <span asp-validation-for="@Model.DrawDate" class="text-danger"></span>
                        </div>

                        <div class="col-sm-6 mb-2">
                            <label asp-for="@Model.DrawAmount" class="form-label-add-edit">Размер на пл. усвояване в ориг. валута:</label>
                            <div class="input-group">
                                <input asp-for="DrawAmount" class="form-control" type="number" step="0.01" min="0" readonly="readonly" />
                            </div>
                            <span asp-validation-for="@Model.DrawAmount" class="text-danger"></span>
                        </div>

                        <div class="mb-2">
                            <input class="btn btn-primary btn-dark-text w-100 py-2 fw-bold rounded" type="submit" value="Запис" disabled="disabled" />

                        </div>
                        
                    }
                    else
                    {

                        <div class="col-sm-6 mb-2">
                            <label asp-for="@Model.DrawDate" class="form-label-add-edit">Дата на планирано усвояване:</label>
                            <input asp-for="@Model.DrawDate" class="form-control" aria-required="true" value="@(string.IsNullOrEmpty(Model.DrawDate) ? today : Model.DrawDate)"/>
                            <span asp-validation-for="@Model.DrawDate" class="text-danger"></span>
                        </div>

                        <div class="col-sm-6 mb-2">
                            <label asp-for="@Model.DrawAmount" class="form-label-add-edit">Размер на пл. усвояване в ориг. валута:</label>
                            <div class="input-group">
                                <input asp-for="DrawAmount" class="form-control" type="number" step="0.01" min="0" />
                            </div>
                            <span asp-validation-for="@Model.DrawAmount" class="text-danger"></span>
                        </div>

                        <div class="mb-2">
                            <input class="btn btn-primary btn-dark-text w-100 py-2 fw-bold rounded" type="submit" value="Запис" />

                        </div>
                        
                    
                    }

                }

               
        </form>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-lg-12">
        <table id="drawTable" class="table table-hover table-striped"></table>
    </div>
</div>

 <div class="row card-body">
    <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
        <div class="row">
             <div class="mb-2"> 
                    <button class="btn btn-primary btn-lg" onclick="window.history.back()">Назад</button>
             </div>
        </div>
    </div>
 </div>

@section FooterScripts {
        
  <script src="~/lib/data-tables/datatables.min.js"></script>

}

@section Scripts {
    <script>
     
        $(function () {
            var debtId = @Model.DebtId
            
            $('#drawTable').DataTable({
                dom: '<"row"<"col-sm-6 dataTables_buttons"B><"col-sm-6"f>>rtip',
                serverSide:false,
                ajax: {
                    "url": "@Url.Action("GetPlannedDrawsForDataTable", "Draw")",
                    "type": "GET",
                    "datatype": "json",
                    "data" : function(d){
                        d.id = debtId
                       
                    }
                    

                },
               
                language: {
                    url: "/lib/data-tables/dataTables.bgBG.json", 
                    search: "", 
                    searchPlaceholder: "Търсене" 
                },
                columns: [
                   

                    {
                        name: 'drawDate',
                        data: 'drawDate',
                        title: 'Дата на планирано усвояване',
                        sortable: true,
                        searchable: false
                    },
                    {
                        name: 'drawAmount',
                        data: 'drawAmount',
                        title: 'Размер на планирано усвояване в оригинална валута',
                        sortable: true,
                        searchable: true
                    },
                    {
                        data: 'drawId', 
                        title: 'Действия',
                        render: function (data, type, row) {
                   
                              if (row.isDebtFinished === false) {
                                
                                return '<button type="button" class="btn btn-danger" onclick="deletePlannedDraw(' + row.drawId + ');"><i class="fa fa-trash"></i> Изтрий</button>';
                            } else {
                                
                                return '';
                            }


                }
            }

           

                ]
            });
        });
    </script>

      
    <script>

        function deletePlannedDraw(drawId){
           
            if (confirm('Сигурни ли сте, че искате да изтриете този запис?')) {
                $.ajax({
                    url: '@Url.Action("DeletePlannedDraw", "Draw")', 
                    type: 'POST',
                    headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                    data: { id: drawId },  
                    success: function (result) {
                        if (result.success) {
                            alert('Записът беше успешно изтрит!');
                            $('#drawTable').DataTable().ajax.reload();  
                        } else {
                            alert(result.message); 
                        }
                    },
                    error: function () {
                        alert('Грешка при комуникация със сървъра!');
                    }
                });
            }
        }

        $('#drawTable').on('click', '.delete-btn', function () {

            debugger;
         var drawId = $(this).data('drawId');  
         
        
    if (confirm('Сигурни ли сте, че искате да изтриете този запис?')) {
        $.ajax({
            url: '@Url.Action("DeletePlannedDraw", "Draw")',  
            data: { id: drawId }, 
            success: function (result) {
                if (result.success) {
                    alert('Записът беше успешно изтрит!');
                    $('#drawTable').DataTable().ajax.reload();  
                } else {
                    alert(result.message);  
                }
            },
            error: function () {
                alert('Грешка при комуникация със сървъра!');
            }
        });
    }
});
    </script>

}|
   