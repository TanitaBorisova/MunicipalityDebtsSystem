

@{
    ViewData["Title"] = "Списък с дългове";
}
@section HeadContent {
        <link href="~/lib/font-awesome/css/font-awesome.css" rel="stylesheet" />
        <link href="~/lib/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
        <link href="~/lib/data-tables/datatables.min.css" rel="stylesheet" />

}

<h1 class="smart-title">@ViewData["Title"]</h1>
<div class="row">
    <div class="col-lg-12">
        <table id="debtTable" class="table table-hover table-striped"></table>
    </div>
</div>


<!-- DataTables JS and jQuery -->
@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/lib/data-tables/datatables.min.js"></script>
 *@ 



@section FooterScripts {
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="~/lib/data-tables/datatables.min.js"></script>

}


@section Scripts {
       <script>
         $.fn.dataTable.ext.buttons.io_colvis = {
            extend: 'colvis',
            text: '<i class="eye outline icon"></i>',
            titleAttr: 'Видими Колони',
            className: 'ui basic button'
        };
        $.fn.dataTable.ext.buttons.io_pageLength = {
            extend: 'pageLength',
            className: 'ui basic button'
        };

            $(function () {
                $('#debtTable').DataTable({
                    dom: '<"row"<"col-sm-6 dataTables_buttons"B><"col-sm-6"f>>rtip',
                    serverSide:false,
                    ajax: {
                        "url": "@Url.Action("GetDebtsAdminForDataTable", "Debt")",

                        "type": "GET",
                        "datatype": "json",
                        // data: function (d) {

                        //     // // return {
                        //     // draw: d.draw,
                        //     // start: d.start,
                        //     // length: d.length,
                        //     // searchValue: d.search.value  // Add any additional filters

                        // }

                    },
                    // buttons: {                    
                    //     buttons: ['io_pageLength', 'io_colvis']
                    // },
                    // lengthMenu: [
                    //     [10, 25, 50, 100, -1],
                    //     ['10 реда', '25 реда', '50 реда', '100 реда', 'Покажи всички']
                    // ],
                    language: {
                        url: "/lib/data-tables/dataTables.bgBG.json",
                        search: "", // Change the default placeholder
                        searchPlaceholder: "Търсене" // Custom placeholder text
                    },
                    columns: [


                        {
                            name: 'debtNumber',
                            data: 'debtNumber',
                            title: 'Номер на дълг/анекс',
                            sortable: true,
                            searchable: true
                        },
                        {
                            name: 'debtParentNumber',
                            data: 'debtParentNumber',
                            title: 'Към договор№',
                            sortable: true,
                            searchable: true
                        },
                        {
                            // className: 'col-md-1',
                            name: 'dateBook',
                            data: 'dateBook',
                            title: 'Начална дата на дълг',
                            sortable: true,
                            searchable: false,
                            // "render": function (value) {
                            //     if (value)
                            //         return moment(value).format("DD.MM.YYYY");
                            //     else
                            //         return "";
                            // }
                        },
                        {
                            // className: 'col-md-1',
                            name: 'dateContractFinish',
                            data: 'dateContractFinish',
                            title: 'Крайна дата на дълг',
                            sortable: true,
                            searchable: false,
                            // "render": function (value) {
                            //     if (value)
                            //         return moment(value).format("DD.MM.YYYY");
                            //     else
                            //         return "";
                            // }
                        },
                         {
                            name: 'municipalityCode',
                            data: 'municipalityCode',
                            title: 'Код',
                            sortable: true,
                            searchable: true
                        },
                        {
                            name: 'municipalityName',
                            data: 'municipalityName',
                            title: 'Община',
                            sortable: true,
                            searchable: true
                        },
                        {
                            name: 'debtAmountOriginalCcy',
                            data: 'debtAmountOriginalCcy',
                            title: 'Размер на дълга в оригинална валута',
                            sortable: true,
                            searchable: true
                        },
                        {
                            name: 'currencyName',
                            data: 'currencyName',
                            title: 'Валута',
                            sortable: true,
                            searchable: true
                        },
                         {
                            name: 'statusName',
                            data: 'statusName',
                            title: 'Статус',
                            sortable: true,
                            searchable: true
                        },

                        {
                             name: 'actions',
                             data: 'id',
                             title: '',
                             sortable: false,
                             searchable: false,
                             className: "text-right",
                             render: function (data, type, row, meta) {
                                 /* return '<a href="Debt/Details/' + row.id + '" class="btn btn-primary" title="Преглед"><i class="fa fa-info-circle"></i></a>';*/
                             //      return '<a href="' + '@Url.Action("Details", "Debt", new { area = "Admin" })'.replace('1', row.id) +'">Details</a>';
                             //return '<a href="' + '@Url.Action("Details", "Debt")'+ '/'+  row.id + '">Details</a>';
                            return '<a href="Debt/Details/' + row.id + '" class="btn btn-primary" title="Преглед"><i class="fa fa-info-circle"></i></a>';
                              }
                        },
                         {
                            data: 'id', // This is where drawId comes from
                            title: 'Действия',
                            render: function (data, type, row) {
                                // return `
                                    // <button class="btn btn-danger delete-btn" data-id="${data}">Изтрий</button>
                                // `;
                                return '<button type="button" class="btn btn-danger" onclick="deleteDebt(' + row.id + ');"><i class="fa fa-trash"></i> Изтрий</button>';
                         }
            }

                        // {
                        //     name: 'actions',
                        //     data: "id",
                        //     title: "",
                        //     sortable: false,
                        //     searchable: false,
                        //     className: "text-center noExport",
                        //     "render": function (value) {
                        //         return TemplateToHtml('#caseSelectionProtokolTemplateEdit', value);
                        //     }
                        // }

                    ]
                });
            });
        </script>

    <script>

        function deleteDebt(id) {
            debugger
            if (confirm('Сигурни ли сте, че искате да изтриете този запис?')) {
                $.ajax({
                    url: '@Url.Action("DeleteDebt", "Debt")',
                    type: 'POST',
                    headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                    data: { id: id },  // Pass the ID to delete
                    success: function (result) {
                        
                           if (result.success) {
                                alert('Записът беше успешно изтрит!');
                                $('#debtTable').DataTable().ajax.reload();  // Reload the table after deletion
                    } else {
                        alert(result.message);  // Show the message from the server
                    }

                    },
                    error: function () {
                        alert('Грешка при комуникация със сървъра!');
                    }
                });
            }
        }

        // $('#drawTable').on('click', '.delete-btn', function () {

        //     debugger;
        //     var drawId = $(this).data('drawId');  // Get the ID of the record to delete  - was id


        //     if (confirm('Сигурни ли сте, че искате да изтриете този запис?')) {
        //         $.ajax({
        //             url: '@Url.Action("DeletePlannedDraw", "Draw")',  // Action to handle deletion
        //             type: 'POST',
        //             data: { id: drawId },  // Pass the ID to delete
        //             success: function (result) {
        //                 if (result.success) {
        //                     alert('Записът беше успешно изтрит!');
        //                     $('#drawTable').DataTable().ajax.reload();  // Reload the table after deletion
        //                 } else {
        //                     alert(result.message);  // Show the message from the server
        //                 }
        //             },
        //             error: function () {
        //                 alert('Грешка при комуникация със сървъра!');
        //             }
        //         });
        //     }
        // });
    </script>
}

