// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MunicipalityDebtsSystem.Infrastructure.Data;

#nullable disable

namespace MunicipalityDebtsSystem.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241026174127_NomenclaturesSeeds")]
    partial class NomenclaturesSeeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MunicipalityDebtsSystem.Infrastructure.Data.Models.Nomenclatures.CreditStatusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CreditsStatusesTypes", "nomenclatures", t =>
                        {
                            t.HasComment("Table for statuses of the credit");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Непотвърден"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Потвърден"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Приключен"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Предоговорен"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Предоговорен/Приключен"
                        });
                });

            modelBuilder.Entity("MunicipalityDebtsSystem.Infrastructure.Data.Models.Nomenclatures.CreditType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CreditsTypes", "nomenclatures", t =>
                        {
                            t.HasComment("Table for types of the credit");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Изискуема общинска гаранция"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Безлихвени заеми, отпуснати по реда на ЗПФ"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Търговски кредити"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Финансов лизинг"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Останали форми на дълг"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Възмездно финансиране по чл.103, ал.3 от ЗПФ"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Договор за общински заем"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Общинските предприятия по чл. 52 от ЗОС"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Безлихвени заеми от ЦБ по чл.43 ал.1 от ЗУДБ"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Търговски кредити над две години"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "Финансов лизинг над две години"
                        });
                });

            modelBuilder.Entity("MunicipalityDebtsSystem.Infrastructure.Data.Models.Nomenclatures.CreditorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CreditorsTypes", "nomenclatures", t =>
                        {
                            t.HasComment("Table for creditor's types");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Правителство"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "МФ"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Кредитна институция - банка"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Финансова институция"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Община"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Българска банка за развитие АД"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Други"
                        });
                });

            modelBuilder.Entity("MunicipalityDebtsSystem.Infrastructure.Data.Models.Nomenclatures.DebtPurposeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DebtTypeId")
                        .HasColumnType("int")
                        .HasComment("Identificator of debt type");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DebtTypeId");

                    b.ToTable("DebtsPurposesTypes", "nomenclatures", t =>
                        {
                            t.HasComment("Table for purpose of the debt");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DebtTypeId = 2,
                            IsDeleted = false,
                            Name = "Инвестиционни проекти"
                        },
                        new
                        {
                            Id = 2,
                            DebtTypeId = 2,
                            IsDeleted = false,
                            Name = "Рефинансиране на съществуващ дълг"
                        },
                        new
                        {
                            Id = 3,
                            DebtTypeId = 2,
                            IsDeleted = false,
                            Name = "Форсмажорни обстоятелства"
                        },
                        new
                        {
                            Id = 4,
                            DebtTypeId = 2,
                            IsDeleted = false,
                            Name = "Изискуеми общински гаранции"
                        },
                        new
                        {
                            Id = 5,
                            DebtTypeId = 1,
                            IsDeleted = false,
                            Name = "Временен недостиг на средства"
                        },
                        new
                        {
                            Id = 6,
                            DebtTypeId = 1,
                            IsDeleted = false,
                            Name = "Капиталови разходи"
                        },
                        new
                        {
                            Id = 7,
                            DebtTypeId = 2,
                            IsDeleted = false,
                            Name = "Неотложни разходи"
                        },
                        new
                        {
                            Id = 8,
                            DebtTypeId = 2,
                            IsDeleted = false,
                            Name = "Закупуване на ДМА"
                        },
                        new
                        {
                            Id = 9,
                            DebtTypeId = 1,
                            IsDeleted = false,
                            Name = "Плащания по проекти, финансирани с ЕС"
                        });
                });

            modelBuilder.Entity("MunicipalityDebtsSystem.Infrastructure.Data.Models.Nomenclatures.DebtType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DebtsTypes", "nomenclatures", t =>
                        {
                            t.HasComment("Table for all types of debt");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Краткосрочен"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Дългосрочен"
                        });
                });

            modelBuilder.Entity("MunicipalityDebtsSystem.Infrastructure.Data.Models.Nomenclatures.InterestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("InterestsTypes", "nomenclatures", t =>
                        {
                            t.HasComment("Table for all types of interest");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "С отстъпка"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Фиксиран"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Плаващ"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Нулев"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MunicipalityDebtsSystem.Infrastructure.Data.Models.Nomenclatures.DebtPurposeType", b =>
                {
                    b.HasOne("MunicipalityDebtsSystem.Infrastructure.Data.Models.Nomenclatures.DebtType", "DebtType")
                        .WithMany()
                        .HasForeignKey("DebtTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DebtType");
                });
#pragma warning restore 612, 618
        }
    }
}
